version: 2

release_config: &release_config
  working_directory: /go/src/github.com/bluele/hypermint
  docker:
    - image: golang:1.13.0-buster
  environment:
    BUILD_DIR: ./build

jobs:
  build:
    working_directory: /go/src/github.com/bluele/hypermint
    docker:
      - image: golang:1.13.0-buster
    environment:
      GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: "build"
          command: |
            make build
      - run:
          name: "test"
          command: |
            make test
      - persist_to_workspace:
          root: /
          paths:
            - go/src/github.com/bluele/hypermint

  contract-test:
    working_directory: /go/src/github.com/bluele/hypermint
    docker:
      - image: rust:1.37.0-buster
    steps:
      - checkout
      - run:
          name: "install clippy & rustfmt"
          command: |
            rustup update
            rustup component add clippy
            rustup component add rustfmt
      - run:
          name: "fmt check"
          command: |
            cargo fmt -- --check
          working_directory: hmcdk
      - run:
          name: "clippy"
          command: |
            cargo clippy -- -D warnings
          working_directory: hmcdk
      - run:
          name: "test"
          command: |
            cargo test
          working_directory: hmcdk

  integration-test:
    working_directory: /go/src/github.com/bluele/hypermint
    docker:
      - image: hypermint/go-rust:v0.2.0
    environment:
      GO111MODULE: "on"
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: "integration-test"
          command: |
            make integration-test

  e2e-test:
    working_directory: /go/src/github.com/bluele/hypermint
    docker:
      - image: hypermint/go-rust:v0.2.0
    environment:
      GO111MODULE: "on"
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: "e2e-test"
          command: |
            make e2e-test

  pre-release:
    <<: *release_config
    steps:
      - checkout
      - run:
          name: "check if branch name is valid"
          command: |
            export VERSION=$(cat version)
            echo "VERSION is $VERSION"
            echo "CIRCLE_BRANCH is $CIRCLE_BRANCH"
            if [ "release/${VERSION}" != "${CIRCLE_BRANCH}" ]; then
              exit 1
            fi

  release:
    <<: *release_config
    steps:
      - add_ssh_keys:
          fingerprints:
            - "2f:29:92:8a:ae:d0:d4:80:ed:3b:6b:6e:1f:e6:94:44"
      - checkout
      - run:
          name: "publish a version tag"
          command: |
            export VERSION=$(cat version)
            git tag $(cat version)
            git push origin $(cat version)

workflows:
  version: 2
  test-suite:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - contract-test:
          filters:
            tags:
              only: /.*/
      - integration-test:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - e2e-test:
          filters:
            tags:
              only: /.*/
          requires:
            - build
  pre-release:
    jobs:
      - pre-release:
          filters:
            branches:
              only: /release\/v[0-9]+\.[0-9]+\.[0-9]+/
  release:
    jobs:
      - release:
          filters:
            branches:
              only: master
